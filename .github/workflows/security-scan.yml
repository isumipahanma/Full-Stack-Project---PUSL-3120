name: 🔒 Security Scan

on:
  schedule:
    # Run security scans daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:
  push:
    branches: [main]

permissions:
  contents: read
  security-events: write

jobs:
  codeql-analysis:
    name: 🔍 CodeQL Analysis
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        language: ['javascript']

    steps:
      - name: 📂 Checkout Code
        uses: actions/checkout@v4

      - name: 🔍 Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}

      - name: 🔧 Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: 📊 Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

  dependency-scan:
    name: 🔍 Dependency Scan
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [frontend, backend]

    steps:
      - name: 📂 Checkout Code
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: ${{ matrix.service }}/package-lock.json

      - name: 📦 Install Dependencies
        working-directory: ${{ matrix.service }}
        run: npm ci

      - name: 🔍 Run Security Audit
        working-directory: ${{ matrix.service }}
        run: |
          echo "🔍 Running security audit for ${{ matrix.service }}..."
          npm audit --audit-level=moderate --json > audit-results.json || true
          
          # Display results
          cat audit-results.json | jq '.vulnerabilities // empty'
          
          # Fail if high/critical vulnerabilities found
          HIGH_VULNS=$(cat audit-results.json | jq '.metadata.vulnerabilities.high // 0')
          CRITICAL_VULNS=$(cat audit-results.json | jq '.metadata.vulnerabilities.critical // 0')
          
          if [ "$HIGH_VULNS" -gt "0" ] || [ "$CRITICAL_VULNS" -gt "0" ]; then
            echo "❌ High or critical vulnerabilities found!"
            echo "High: $HIGH_VULNS, Critical: $CRITICAL_VULNS"
            exit 1
          else
            echo "✅ No high or critical vulnerabilities found"
          fi

      - name: 📤 Upload Security Report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: security-audit-${{ matrix.service }}
          path: ${{ matrix.service }}/audit-results.json

  secrets-scan:
    name: 🔐 Secrets Scan
    runs-on: ubuntu-latest

    steps:
      - name: 📂 Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🔐 Run TruffleHog
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: main
          head: HEAD
          extra_args: --debug --only-verified
