version: '3.8'

services:
  # Backend Development Override
  backend:
    environment:
      - NODE_ENV=development
      - DEBUG=app:*
      - CHOKIDAR_USEPOLLING=true
    volumes:
      - ./backend:/usr/src/app
      - /usr/src/app/node_modules
    command: npm run dev
    ports:
      - "5000:5000"
      - "9229:9229"  # Debug port

  # Frontend Development Override
  frontend:
    environment:
      - REACT_APP_API_URL=http://localhost:5000
      - REACT_APP_SOCKET_URL=http://localhost:5000
      - FAST_REFRESH=true
      - CHOKIDAR_USEPOLLING=true
      - WDS_SOCKET_HOST=localhost
      - WDS_SOCKET_PORT=3000
    volumes:
      - ./frontend:/usr/src/app
      - /usr/src/app/node_modules
    command: npm start
    stdin_open: true
    tty: true

  # MongoDB Development Settings
  mongodb:
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: ecommerce_dev
    ports:
      - "27017:27017"

  # MongoDB Express for Development
  mongo-express:
    image: mongo-express:latest
    container_name: ecommerce-mongo-express
    restart: unless-stopped
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: password123
      ME_CONFIG_MONGODB_URL: mongodb://admin:password123@mongodb:27017/
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: password123
    ports:
      - "8081:8081"
    depends_on:
      - mongodb
    networks:
      - ecommerce-network

  # Mailhog for Email Testing
  mailhog:
    image: mailhog/mailhog:latest
    container_name: ecommerce-mailhog
    restart: unless-stopped
    ports:
      - "1025:1025"  # SMTP
      - "8025:8025"  # Web UI
    networks:
      - ecommerce-network 